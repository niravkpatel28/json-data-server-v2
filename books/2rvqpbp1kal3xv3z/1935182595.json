[
  {
    "title": "Clojure in Action",
    "isbn": "1935182595",
    "pageCount": 475,
    "publishedDate": {
      "$date": "2011-11-15T00:00:00.000-0800"
    },
    "thumbnailUrl": "https://s3.amazonaws.com/AKIAJC5RLADLUMVRPFDQ.book-thumb-images/rathore.jpg",
    "shortDescription": "Clojure in Action is a hands-on tutorial for the working programmer who has written code in a language like Java or Ruby, but has no prior experience with Lisp. It teaches Clojure from the basics to advanced topics using practical, real-world application examples. Blow through the theory and dive into practical matters like unit-testing, environment set up, all the way through building a scalable web-application using domain-specific languages, Hadoop, HBase, and RabbitMQ.",
    "longDescription": "Clojure is a modern implementation of Lisp for the JVM, ideally suited for general programming and specialized tasks like creating domain specific languages. Like Haskell and Scala, Clojure supports the functional style of programming. By combining first-class functions, lexical closures, multimethods, and a full-fledged macro system, you get more than what typical OO languages can possibly offer. Moreover, you get ultra-clean code that reflects Lisp's famously-concise style. That means far fewer bugs when compared to stateful languages such as Java or C++.    Clojure in Action is a hands-on tutorial for the working programmer who has written code in a language like Java or Ruby, but has no prior experience with Lisp. It teaches Clojure from the basics to advanced topics using practical, real-world application examples. Blow through the theory and dive into practical matters like unit-testing, environment set up, all the way through building a scalable web-application using domain-specific languages, Hadoop, HBase, and RabbitMQ.    For readers coming from Java, you'll see how Clojure's use of the JVM makes it seamlessly interoperable with existing Java code. Learn how to access the thousands of existing libraries and frameworks. You'll also discover the concurrency semantics built into the language, which enable you to very easily write multi-threaded programs and take advantage of multiple cores in modern CPUs. With cloud-computing and multi-core becoming major trends, this is a huge advantage.    WHAT'S INSIDE        * A modern Lisp without all the baggage      * Functional programming that's also practical      * Unit-testing, embedding Clojure, distributed programming, and more      * State management and safe concurrency for multi-core CPUs      * Create domain specific languages (DSLs) with the macro system      * Write web-scale applications that scale transparently across multiple CPUs      * Seamless interoperability with thousands of Java libraries      * Get performance on level with raw Java",
    "status": "PUBLISH",
    "authors": [
      "Amit Rathore"
    ],
    "categories": [
      "Java"
    ],
    "price": 280
  }
]